2020-01-11 16:38:59.311  INFO 8108 --- [main] com.kenick.Application                   : Starting Application on pc-PC with PID 8108 (E:\svn_workspace\SmartFinancialManager\target\classes started by Administrator in E:\svn_workspace\SmartFinancialManager)
2020-01-11 16:38:59.316 DEBUG 8108 --- [main] com.kenick.Application                   : Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2020-01-11 16:38:59.317  INFO 8108 --- [main] com.kenick.Application                   : The following profiles are active: dev
2020-01-11 16:38:59.689  INFO 8108 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2049a9c1: startup date [Sat Jan 11 16:38:59 CST 2020]; root of context hierarchy
2020-01-11 16:39:00.548  INFO 8108 --- [main] ptablePropertiesBeanFactoryPostProcessor : Post-processing PropertySource instances
2020-01-11 16:39:00.587  INFO 8108 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-01-11 16:39:00.588  INFO 8108 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-01-11 16:39:00.588  INFO 8108 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-01-11 16:39:00.588  INFO 8108 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource systemEnvironment [org.springframework.core.env.SystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-01-11 16:39:00.588  INFO 8108 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource random [org.springframework.boot.context.config.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-01-11 16:39:00.588  INFO 8108 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource applicationConfig: [classpath:/application-dev.properties] [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-01-11 16:39:00.589  INFO 8108 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-01-11 16:39:00.864  INFO 8108 --- [main] c.u.j.r.DefaultLazyPropertyResolver      : Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-01-11 16:39:00.867  INFO 8108 --- [main] c.u.j.d.DefaultLazyPropertyDetector      : Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-01-11 16:39:01.036  INFO 8108 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8011 (http)
2020-01-11 16:39:01.043  INFO 8108 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-01-11 16:39:01.044  INFO 8108 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.16
2020-01-11 16:39:01.153  INFO 8108 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-01-11 16:39:01.153  INFO 8108 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1464 ms
2020-01-11 16:39:01.328  INFO 8108 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-01-11 16:39:01.333  INFO 8108 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-11 16:39:01.334  INFO 8108 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-11 16:39:01.334  INFO 8108 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-11 16:39:01.334  INFO 8108 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-01-11 16:39:01.461  INFO 8108 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2020-01-11 16:39:01.468  INFO 8108 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.algorithm, using default value: PBEWithMD5AndDES
2020-01-11 16:39:01.468  INFO 8108 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.keyObtentionIterations, using default value: 1000
2020-01-11 16:39:01.468  INFO 8108 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.poolSize, using default value: 1
2020-01-11 16:39:01.468  INFO 8108 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.providerName, using default value: null
2020-01-11 16:39:01.468  INFO 8108 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.saltGeneratorClassname, using default value: org.jasypt.salt.RandomSaltGenerator
2020-01-11 16:39:01.469  INFO 8108 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.stringOutputType, using default value: base64
2020-01-11 16:39:02.275  INFO 8108 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2049a9c1: startup date [Sat Jan 11 16:38:59 CST 2020]; root of context hierarchy
2020-01-11 16:39:02.327  INFO 8108 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/fund/index.html]}" onto public java.lang.String com.kenick.controller.FundController.index(org.springframework.ui.Model)
2020-01-11 16:39:02.327  INFO 8108 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/fund/queryfundinfolist]}" onto public java.lang.String com.kenick.controller.FundController.queryFundInfoList()
2020-01-11 16:39:02.328  INFO 8108 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/hello],methods=[GET]}" onto public java.lang.String com.kenick.controller.HelloController.hello(org.springframework.ui.Model)
2020-01-11 16:39:02.328  INFO 8108 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.kenick.controller.IndexController.index()
2020-01-11 16:39:02.329  INFO 8108 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/addUser]}" onto public com.kenick.generate.bean.User com.kenick.controller.UserController.addUser(javax.servlet.http.HttpServletRequest,org.springframework.ui.Model)
2020-01-11 16:39:02.330  INFO 8108 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-11 16:39:02.331  INFO 8108 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-11 16:39:02.359  INFO 8108 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-11 16:39:02.359  INFO 8108 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-11 16:39:02.395  INFO 8108 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-11 16:39:03.064  INFO 8108 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-01-11 16:39:03.065  INFO 8108 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2020-01-11 16:39:03.069  INFO 8108 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2020-01-11 16:39:03.079  INFO 8108 --- [main] s.a.ScheduledAnnotationBeanPostProcessor : No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-11 16:39:03.119  INFO 8108 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8011 (http)
2020-01-11 16:39:03.123  INFO 8108 --- [main] com.kenick.Application                   : Started Application in 4.265 seconds (JVM running for 5.024)
2020-01-11 16:40:00.176  INFO 8108 --- [pool-1-thread-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-01-11 16:40:00.316 DEBUG 8108 --- [pool-1-thread-1] c.k.g.dao.FundMapper.selectByExample     : ==>  Preparing: select fund_code, fund_name, cur_time, cur_net_value, cur_gain, last_net_value, last_gain, gain_total, fund_state, modify_date, create_date from fund order by fund_code 
2020-01-11 16:40:00.330 DEBUG 8108 --- [pool-1-thread-1] c.k.g.dao.FundMapper.selectByExample     : ==> Parameters: 
2020-01-11 16:40:00.361 DEBUG 8108 --- [pool-1-thread-1] c.k.g.dao.FundMapper.selectByExample     : <==      Total: 13
2020-01-11 16:40:00.992 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"001645","name":"国泰大健康股票","jzrq":"2020-01-09","dwjz":"2.2930","gsz":"2.3013","gszzl":"0.36","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:01.191 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:01.194 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 001645(String), 国泰大健康股票(001645)(String), 01-10 15:00(String), 2.3013(Double), 0.36(Double), 2.291(Double), -0.09(Double), 0.27(BigDecimal), 001645(String)
2020-01-11 16:40:01.294 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:01.410 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003096","name":"中欧医疗健康混合C","jzrq":"2020-01-09","dwjz":"1.7890","gsz":"1.7966","gszzl":"0.42","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:01.412 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:01.414 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 003096(String), 中欧医疗健康混合C(003096)(String), 01-10 15:00(String), 1.7966(Double), 0.42(Double), 1.798(Double), 0.5(Double), 0.9199999999999999(BigDecimal), 003096(String)
2020-01-11 16:40:01.452 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:01.697 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003191","name":"创金合信消费主题股票C","jzrq":"2020-01-09","dwjz":"1.6438","gsz":"1.6425","gszzl":"-0.08","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:01.698 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:01.699 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 003191(String), 创金合信消费主题股票C(003191)(String), 01-10 15:00(String), 1.6425(Double), -0.08(Double), 1.648(Double), 0.26(Double), 0.18(BigDecimal), 003191(String)
2020-01-11 16:40:01.746 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:02.075 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003625","name":"创金合信资源股票发起式C","jzrq":"2020-01-09","dwjz":"1.1053","gsz":"1.0972","gszzl":"-0.73","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:02.078 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:02.082 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 003625(String), 创金合信资源股票发起式C(003625)(String), 01-10 15:00(String), 1.0972(Double), -0.73(Double), 1.1038(Double), -0.14(Double), -0.87(BigDecimal), 003625(String)
2020-01-11 16:40:02.118 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:02.405 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003956","name":"南方教育股票","jzrq":"2020-01-09","dwjz":"1.4821","gsz":"1.4921","gszzl":"0.67","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:02.406 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:02.407 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 003956(String), 南方教育股票(003956)(String), 01-10 15:00(String), 1.4921(Double), 0.67(Double), 1.4826(Double), 0.03(Double), 0.7000000000000001(BigDecimal), 003956(String)
2020-01-11 16:40:02.478 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:02.842 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"004683","name":"建信高端医疗股票","jzrq":"2020-01-09","dwjz":"1.1376","gsz":"1.1367","gszzl":"-0.08","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:02.845 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:02.847 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 004683(String), 建信高端医疗股票(004683)(String), 01-10 15:00(String), 1.1367(Double), -0.08(Double), 1.1416(Double), 0.35(Double), 0.26999999999999996(BigDecimal), 004683(String)
2020-01-11 16:40:02.876 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:03.079 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"005496","name":"创金合信科技成长股票C","jzrq":"2020-01-09","dwjz":"1.3844","gsz":"1.3862","gszzl":"0.13","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:03.080 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:03.081 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 005496(String), 创金合信科技成长股票C(005496)(String), 01-10 15:00(String), 1.3862(Double), 0.13(Double), 1.3899(Double), 0.4(Double), 0.53(BigDecimal), 005496(String)
2020-01-11 16:40:03.120 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:03.246 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"005963","name":"宝盈人工智能股票C","jzrq":"2020-01-09","dwjz":"1.7709","gsz":"1.7787","gszzl":"0.44","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:03.250 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:03.256 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 005963(String), 宝盈人工智能股票C(005963)(String), 01-10 15:00(String), 1.7787(Double), 0.44(Double), 1.7847(Double), 0.78(Double), 1.22(BigDecimal), 005963(String)
2020-01-11 16:40:03.301 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:03.565 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"070001","name":"嘉实成长收益混合A","jzrq":"2020-01-09","dwjz":"1.1775","gsz":"1.1785","gszzl":"0.09","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:03.566 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:03.567 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 070001(String), 嘉实成长收益混合A(070001)(String), 01-10 15:00(String), 1.1785(Double), 0.09(Double), 1.1915(Double), 1.19(Double), 1.28(BigDecimal), 070001(String)
2020-01-11 16:40:03.602 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:03.953 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"070011","name":"嘉实策略混合","jzrq":"2020-01-09","dwjz":"1.2210","gsz":"1.2214","gszzl":"0.03","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:03.956 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:03.958 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 070011(String), 嘉实策略混合(070011)(String), 01-10 15:00(String), 1.2214(Double), 0.03(Double), 1.216(Double), -0.41(Double), -0.38(BigDecimal), 070011(String)
2020-01-11 16:40:03.993 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:04.187 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"160222","name":"国泰国证食品饮料行业指数分级","jzrq":"2020-01-09","dwjz":"1.0976","gsz":"1.1108","gszzl":"1.21","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:04.188 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:04.188 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 160222(String), 国泰国证食品饮料行业指数分级(160222)(String), 01-10 15:00(String), 1.1108(Double), 1.21(Double), 1.1108(Double), 1.2(Double), 2.41(BigDecimal), 160222(String)
2020-01-11 16:40:04.228 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:04.353 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"163402","name":"兴全趋势投资混合(LOF)","jzrq":"2020-01-09","dwjz":"0.7560","gsz":"0.7552","gszzl":"-0.11","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:04.354 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:04.355 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 163402(String), 兴全趋势投资混合(LOF)(前端：163402  后端：163403)(String), 01-10 15:00(String), 0.7552(Double), -0.11(Double), 0.757(Double), 0.13(Double), 0.020000000000000004(BigDecimal), 163402(String)
2020-01-11 16:40:04.385 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:04.480 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"519727","name":"交银成长30混合","jzrq":"2020-01-09","dwjz":"1.6650","gsz":"1.6801","gszzl":"0.91","gztime":"2020-01-10 15:00"});
2020-01-11 16:40:04.482 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==>  Preparing: update fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:40:04.484 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : ==> Parameters: 519727(String), 交银成长30混合(前端：519727  后端：519728)(String), 01-10 15:00(String), 1.6801(Double), 0.91(Double), 1.67(Double), 0.3(Double), 1.21(BigDecimal), 519727(String)
2020-01-11 16:40:04.520 DEBUG 8108 --- [pool-1-thread-1] c.k.g.d.F.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:40:04.521 DEBUG 8108 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 遍历基金一轮花费时间:4517
2020-01-11 16:40:59.236  INFO 8108 --- [Thread-10] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2049a9c1: startup date [Sat Jan 11 16:38:59 CST 2020]; root of context hierarchy
2020-01-11 16:40:59.239  INFO 8108 --- [Thread-10] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2020-01-11 16:40:59.239  INFO 8108 --- [Thread-10] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2020-01-11 16:40:59.246  INFO 8108 --- [Thread-10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-01-11 16:48:51.403  INFO 6728 --- [main] com.kenick.Application                   : Starting Application on pc-PC with PID 6728 (E:\svn_workspace\SmartFinancialManager\target\classes started by Administrator in E:\svn_workspace\SmartFinancialManager)
2020-01-11 16:48:51.406 DEBUG 6728 --- [main] com.kenick.Application                   : Running with Spring Boot v1.5.6.RELEASE, Spring v4.3.10.RELEASE
2020-01-11 16:48:51.406  INFO 6728 --- [main] com.kenick.Application                   : The following profiles are active: dev
2020-01-11 16:48:51.624  INFO 6728 --- [main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2049a9c1: startup date [Sat Jan 11 16:48:51 CST 2020]; root of context hierarchy
2020-01-11 16:48:52.692  INFO 6728 --- [main] ptablePropertiesBeanFactoryPostProcessor : Post-processing PropertySource instances
2020-01-11 16:48:52.738  INFO 6728 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-01-11 16:48:52.739  INFO 6728 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2020-01-11 16:48:52.740  INFO 6728 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2020-01-11 16:48:52.740  INFO 6728 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource systemEnvironment [org.springframework.core.env.SystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
2020-01-11 16:48:52.741  INFO 6728 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource random [org.springframework.boot.context.config.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2020-01-11 16:48:52.741  INFO 6728 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource applicationConfig: [classpath:/application-dev.properties] [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-01-11 16:48:52.741  INFO 6728 --- [main] c.u.j.EncryptablePropertySourceConverter : Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2020-01-11 16:48:53.093  INFO 6728 --- [main] c.u.j.r.DefaultLazyPropertyResolver      : Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2020-01-11 16:48:53.096  INFO 6728 --- [main] c.u.j.d.DefaultLazyPropertyDetector      : Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2020-01-11 16:48:53.266  INFO 6728 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8011 (http)
2020-01-11 16:48:53.276  INFO 6728 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-01-11 16:48:53.277  INFO 6728 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.16
2020-01-11 16:48:53.388  INFO 6728 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-01-11 16:48:53.388  INFO 6728 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1764 ms
2020-01-11 16:48:53.560  INFO 6728 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2020-01-11 16:48:53.564  INFO 6728 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-11 16:48:53.564  INFO 6728 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-11 16:48:53.564  INFO 6728 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-11 16:48:53.564  INFO 6728 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2020-01-11 16:48:53.704  INFO 6728 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : String Encryptor custom Bean not found with name 'jasyptStringEncryptor'. Initializing Default String Encryptor
2020-01-11 16:48:53.712  INFO 6728 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.algorithm, using default value: PBEWithMD5AndDES
2020-01-11 16:48:53.712  INFO 6728 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.keyObtentionIterations, using default value: 1000
2020-01-11 16:48:53.713  INFO 6728 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.poolSize, using default value: 1
2020-01-11 16:48:53.713  INFO 6728 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.providerName, using default value: null
2020-01-11 16:48:53.713  INFO 6728 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.saltGeneratorClassname, using default value: org.jasypt.salt.RandomSaltGenerator
2020-01-11 16:48:53.714  INFO 6728 --- [main] c.u.j.encryptor.DefaultLazyEncryptor     : Encryptor config not found for property jasypt.encryptor.stringOutputType, using default value: base64
2020-01-11 16:48:54.524  INFO 6728 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2049a9c1: startup date [Sat Jan 11 16:48:51 CST 2020]; root of context hierarchy
2020-01-11 16:48:54.594  INFO 6728 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/fund/index.html]}" onto public java.lang.String com.kenick.controller.FundController.index(org.springframework.ui.Model)
2020-01-11 16:48:54.594  INFO 6728 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/fund/queryfundinfolist]}" onto public java.lang.String com.kenick.controller.FundController.queryFundInfoList()
2020-01-11 16:48:54.595  INFO 6728 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/hello],methods=[GET]}" onto public java.lang.String com.kenick.controller.HelloController.hello(org.springframework.ui.Model)
2020-01-11 16:48:54.595  INFO 6728 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String com.kenick.controller.IndexController.index()
2020-01-11 16:48:54.596  INFO 6728 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/addUser]}" onto public com.kenick.generate.bean.User com.kenick.controller.UserController.addUser(javax.servlet.http.HttpServletRequest,org.springframework.ui.Model)
2020-01-11 16:48:54.598  INFO 6728 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-11 16:48:54.599  INFO 6728 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-11 16:48:54.634  INFO 6728 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-11 16:48:54.634  INFO 6728 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-11 16:48:54.684  INFO 6728 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-11 16:48:55.370  INFO 6728 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2020-01-11 16:48:55.372  INFO 6728 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2020-01-11 16:48:55.376  INFO 6728 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2020-01-11 16:48:55.384  INFO 6728 --- [main] s.a.ScheduledAnnotationBeanPostProcessor : No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-11 16:48:55.425  INFO 6728 --- [main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8011 (http)
2020-01-11 16:48:55.430  INFO 6728 --- [main] com.kenick.Application                   : Started Application in 4.285 seconds (JVM running for 5.121)
2020-01-11 16:49:00.065  INFO 6728 --- [pool-1-thread-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-01-11 16:49:00.214 DEBUG 6728 --- [pool-1-thread-1] c.k.g.dao.FundMapper.selectByExample     : ==>  Preparing: select fund_code, fund_name, cur_time, cur_net_value, cur_gain, last_net_value, last_gain, gain_total, fund_state, modify_date, create_date from fund order by fund_code 
2020-01-11 16:49:00.229 DEBUG 6728 --- [pool-1-thread-1] c.k.g.dao.FundMapper.selectByExample     : ==> Parameters: 
2020-01-11 16:49:00.242 DEBUG 6728 --- [pool-1-thread-1] c.k.g.dao.FundMapper.selectByExample     : <==      Total: 13
2020-01-11 16:49:00.760 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"001645","name":"国泰大健康股票","jzrq":"2020-01-09","dwjz":"2.2930","gsz":"2.3013","gszzl":"0.36","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:00.806 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:00.807 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 国泰大健康股票(001645)(String), 01-10 15:00(String), 2.3013(Double), 0.36(Double), 2.291(Double), -0.09(Double), 0.27(BigDecimal), 001645(String)
2020-01-11 16:49:00.836 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:00.900 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:00.901 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 001645(String), 国泰大健康股票(001645)(String), 01-10 15:00(String), 2.3013(Double), 0.36(Double), 2.291(Double), -0.09(Double), 0.27(BigDecimal), 001645(String)
2020-01-11 16:49:00.902 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:01.010 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003096","name":"中欧医疗健康混合C","jzrq":"2020-01-09","dwjz":"1.7890","gsz":"1.7966","gszzl":"0.42","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:01.011 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:01.012 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 中欧医疗健康混合C(003096)(String), 01-10 15:00(String), 1.7966(Double), 0.42(Double), 1.798(Double), 0.5(Double), 0.9199999999999999(BigDecimal), 003096(String)
2020-01-11 16:49:01.046 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:01.047 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:01.049 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 003096(String), 中欧医疗健康混合C(003096)(String), 01-10 15:00(String), 1.7966(Double), 0.42(Double), 1.798(Double), 0.5(Double), 0.9199999999999999(BigDecimal), 003096(String)
2020-01-11 16:49:01.050 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:01.330 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003191","name":"创金合信消费主题股票C","jzrq":"2020-01-09","dwjz":"1.6438","gsz":"1.6425","gszzl":"-0.08","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:01.330 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:01.331 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 创金合信消费主题股票C(003191)(String), 01-10 15:00(String), 1.6425(Double), -0.08(Double), 1.648(Double), 0.26(Double), 0.18(BigDecimal), 003191(String)
2020-01-11 16:49:01.361 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:01.364 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:01.366 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 003191(String), 创金合信消费主题股票C(003191)(String), 01-10 15:00(String), 1.6425(Double), -0.08(Double), 1.648(Double), 0.26(Double), 0.18(BigDecimal), 003191(String)
2020-01-11 16:49:01.368 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:01.550 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003625","name":"创金合信资源股票发起式C","jzrq":"2020-01-09","dwjz":"1.1053","gsz":"1.0972","gszzl":"-0.73","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:01.554 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:01.556 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 创金合信资源股票发起式C(003625)(String), 01-10 15:00(String), 1.0972(Double), -0.73(Double), 1.1038(Double), -0.14(Double), -0.87(BigDecimal), 003625(String)
2020-01-11 16:49:01.596 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:01.600 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:01.602 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 003625(String), 创金合信资源股票发起式C(003625)(String), 01-10 15:00(String), 1.0972(Double), -0.73(Double), 1.1038(Double), -0.14(Double), -0.87(BigDecimal), 003625(String)
2020-01-11 16:49:01.605 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:01.909 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003956","name":"南方教育股票","jzrq":"2020-01-09","dwjz":"1.4821","gsz":"1.4921","gszzl":"0.67","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:01.911 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:01.913 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 南方教育股票(003956)(String), 01-10 15:00(String), 1.4921(Double), 0.67(Double), 1.4826(Double), 0.03(Double), 0.7000000000000001(BigDecimal), 003956(String)
2020-01-11 16:49:01.971 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:01.975 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:01.981 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 003956(String), 南方教育股票(003956)(String), 01-10 15:00(String), 1.4921(Double), 0.67(Double), 1.4826(Double), 0.03(Double), 0.7000000000000001(BigDecimal), 003956(String)
2020-01-11 16:49:01.984 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:02.191 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"004683","name":"建信高端医疗股票","jzrq":"2020-01-09","dwjz":"1.1376","gsz":"1.1367","gszzl":"-0.08","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:02.192 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:02.193 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 建信高端医疗股票(004683)(String), 01-10 15:00(String), 1.1367(Double), -0.08(Double), 1.1416(Double), 0.35(Double), 0.26999999999999996(BigDecimal), 004683(String)
2020-01-11 16:49:02.228 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:02.231 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:02.233 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 004683(String), 建信高端医疗股票(004683)(String), 01-10 15:00(String), 1.1367(Double), -0.08(Double), 1.1416(Double), 0.35(Double), 0.26999999999999996(BigDecimal), 004683(String)
2020-01-11 16:49:02.237 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:02.550 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"005496","name":"创金合信科技成长股票C","jzrq":"2020-01-09","dwjz":"1.3844","gsz":"1.3862","gszzl":"0.13","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:02.552 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:02.554 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 创金合信科技成长股票C(005496)(String), 01-10 15:00(String), 1.3862(Double), 0.13(Double), 1.3899(Double), 0.4(Double), 0.53(BigDecimal), 005496(String)
2020-01-11 16:49:02.588 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:02.589 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:02.591 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 005496(String), 创金合信科技成长股票C(005496)(String), 01-10 15:00(String), 1.3862(Double), 0.13(Double), 1.3899(Double), 0.4(Double), 0.53(BigDecimal), 005496(String)
2020-01-11 16:49:02.592 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:02.856 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"005963","name":"宝盈人工智能股票C","jzrq":"2020-01-09","dwjz":"1.7709","gsz":"1.7787","gszzl":"0.44","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:02.858 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:02.864 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 宝盈人工智能股票C(005963)(String), 01-10 15:00(String), 1.7787(Double), 0.44(Double), 1.7847(Double), 0.78(Double), 1.22(BigDecimal), 005963(String)
2020-01-11 16:49:02.896 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:02.899 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:02.906 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 005963(String), 宝盈人工智能股票C(005963)(String), 01-10 15:00(String), 1.7787(Double), 0.44(Double), 1.7847(Double), 0.78(Double), 1.22(BigDecimal), 005963(String)
2020-01-11 16:49:02.909 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:03.268 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"070001","name":"嘉实成长收益混合A","jzrq":"2020-01-09","dwjz":"1.1775","gsz":"1.1785","gszzl":"0.09","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:03.270 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:03.272 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 嘉实成长收益混合A(070001)(String), 01-10 15:00(String), 1.1785(Double), 0.09(Double), 1.1915(Double), 1.19(Double), 1.28(BigDecimal), 070001(String)
2020-01-11 16:49:03.304 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:03.307 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:03.308 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 070001(String), 嘉实成长收益混合A(070001)(String), 01-10 15:00(String), 1.1785(Double), 0.09(Double), 1.1915(Double), 1.19(Double), 1.28(BigDecimal), 070001(String)
2020-01-11 16:49:03.310 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:03.665 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"070011","name":"嘉实策略混合","jzrq":"2020-01-09","dwjz":"1.2210","gsz":"1.2214","gszzl":"0.03","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:03.666 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:03.667 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 嘉实策略混合(070011)(String), 01-10 15:00(String), 1.2214(Double), 0.03(Double), 1.216(Double), -0.41(Double), -0.38(BigDecimal), 070011(String)
2020-01-11 16:49:03.703 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:03.704 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:03.705 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 070011(String), 嘉实策略混合(070011)(String), 01-10 15:00(String), 1.2214(Double), 0.03(Double), 1.216(Double), -0.41(Double), -0.38(BigDecimal), 070011(String)
2020-01-11 16:49:03.706 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:03.800 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"160222","name":"国泰国证食品饮料行业指数分级","jzrq":"2020-01-09","dwjz":"1.0976","gsz":"1.1108","gszzl":"1.21","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:03.802 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:03.803 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 国泰国证食品饮料行业指数分级(160222)(String), 01-10 15:00(String), 1.1108(Double), 1.21(Double), 1.1108(Double), 1.2(Double), 2.41(BigDecimal), 160222(String)
2020-01-11 16:49:03.838 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:03.841 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:03.842 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 160222(String), 国泰国证食品饮料行业指数分级(160222)(String), 01-10 15:00(String), 1.1108(Double), 1.21(Double), 1.1108(Double), 1.2(Double), 2.41(BigDecimal), 160222(String)
2020-01-11 16:49:03.845 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:03.956 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"163402","name":"兴全趋势投资混合(LOF)","jzrq":"2020-01-09","dwjz":"0.7560","gsz":"0.7552","gszzl":"-0.11","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:03.957 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:03.957 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 兴全趋势投资混合(LOF)(前端：163402  后端：163403)(String), 01-10 15:00(String), 0.7552(Double), -0.11(Double), 0.757(Double), 0.13(Double), 0.020000000000000004(BigDecimal), 163402(String)
2020-01-11 16:49:03.986 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:03.989 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:03.990 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 163402(String), 兴全趋势投资混合(LOF)(前端：163402  后端：163403)(String), 01-10 15:00(String), 0.7552(Double), -0.11(Double), 0.757(Double), 0.13(Double), 0.020000000000000004(BigDecimal), 163402(String)
2020-01-11 16:49:03.998 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:04.154 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"519727","name":"交银成长30混合","jzrq":"2020-01-09","dwjz":"1.6650","gsz":"1.6801","gszzl":"0.91","gztime":"2020-01-10 15:00"});
2020-01-11 16:49:04.155 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:49:04.156 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 交银成长30混合(前端：519727  后端：519728)(String), 01-10 15:00(String), 1.6801(Double), 0.91(Double), 1.67(Double), 0.3(Double), 1.21(BigDecimal), 519727(String)
2020-01-11 16:49:04.187 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:49:04.189 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:49:04.190 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 519727(String), 交银成长30混合(前端：519727  后端：519728)(String), 01-10 15:00(String), 1.6801(Double), 0.91(Double), 1.67(Double), 0.3(Double), 1.21(BigDecimal), 519727(String)
2020-01-11 16:49:04.191 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:49:04.192 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 遍历基金一轮花费时间:4191
2020-01-11 16:50:00.006 DEBUG 6728 --- [pool-1-thread-1] c.k.g.dao.FundMapper.selectByExample     : ==>  Preparing: select fund_code, fund_name, cur_time, cur_net_value, cur_gain, last_net_value, last_gain, gain_total, fund_state, modify_date, create_date from fund order by fund_code 
2020-01-11 16:50:00.007 DEBUG 6728 --- [pool-1-thread-1] c.k.g.dao.FundMapper.selectByExample     : ==> Parameters: 
2020-01-11 16:50:00.017 DEBUG 6728 --- [pool-1-thread-1] c.k.g.dao.FundMapper.selectByExample     : <==      Total: 13
2020-01-11 16:50:00.147 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"001645","name":"国泰大健康股票","jzrq":"2020-01-09","dwjz":"2.2930","gsz":"2.3013","gszzl":"0.36","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:00.148 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:00.149 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 国泰大健康股票(001645)(String), 01-10 15:00(String), 2.3013(Double), 0.36(Double), 2.291(Double), -0.09(Double), 0.27(BigDecimal), 001645(String)
2020-01-11 16:50:00.194 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:00.197 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:00.199 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 001645(String), 国泰大健康股票(001645)(String), 01-10 15:00(String), 2.3013(Double), 0.36(Double), 2.291(Double), -0.09(Double), 0.27(BigDecimal), 001645(String)
2020-01-11 16:50:00.202 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:00.329 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003096","name":"中欧医疗健康混合C","jzrq":"2020-01-09","dwjz":"1.7890","gsz":"1.7966","gszzl":"0.42","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:00.330 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:00.332 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 中欧医疗健康混合C(003096)(String), 01-10 15:00(String), 1.7966(Double), 0.42(Double), 1.798(Double), 0.5(Double), 0.9199999999999999(BigDecimal), 003096(String)
2020-01-11 16:50:00.368 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:00.371 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:00.372 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 003096(String), 中欧医疗健康混合C(003096)(String), 01-10 15:00(String), 1.7966(Double), 0.42(Double), 1.798(Double), 0.5(Double), 0.9199999999999999(BigDecimal), 003096(String)
2020-01-11 16:50:00.375 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:00.509 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003191","name":"创金合信消费主题股票C","jzrq":"2020-01-09","dwjz":"1.6438","gsz":"1.6425","gszzl":"-0.08","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:00.513 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:00.515 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 创金合信消费主题股票C(003191)(String), 01-10 15:00(String), 1.6425(Double), -0.08(Double), 1.648(Double), 0.26(Double), 0.18(BigDecimal), 003191(String)
2020-01-11 16:50:00.553 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:00.563 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:00.568 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 003191(String), 创金合信消费主题股票C(003191)(String), 01-10 15:00(String), 1.6425(Double), -0.08(Double), 1.648(Double), 0.26(Double), 0.18(BigDecimal), 003191(String)
2020-01-11 16:50:00.569 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:00.672 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003625","name":"创金合信资源股票发起式C","jzrq":"2020-01-09","dwjz":"1.1053","gsz":"1.0972","gszzl":"-0.73","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:00.672 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:00.673 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 创金合信资源股票发起式C(003625)(String), 01-10 15:00(String), 1.0972(Double), -0.73(Double), 1.1038(Double), -0.14(Double), -0.87(BigDecimal), 003625(String)
2020-01-11 16:50:00.701 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:00.702 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:00.703 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 003625(String), 创金合信资源股票发起式C(003625)(String), 01-10 15:00(String), 1.0972(Double), -0.73(Double), 1.1038(Double), -0.14(Double), -0.87(BigDecimal), 003625(String)
2020-01-11 16:50:00.704 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:00.810 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"003956","name":"南方教育股票","jzrq":"2020-01-09","dwjz":"1.4821","gsz":"1.4921","gszzl":"0.67","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:00.811 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:00.811 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 南方教育股票(003956)(String), 01-10 15:00(String), 1.4921(Double), 0.67(Double), 1.4826(Double), 0.03(Double), 0.7000000000000001(BigDecimal), 003956(String)
2020-01-11 16:50:00.844 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:00.845 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:00.846 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 003956(String), 南方教育股票(003956)(String), 01-10 15:00(String), 1.4921(Double), 0.67(Double), 1.4826(Double), 0.03(Double), 0.7000000000000001(BigDecimal), 003956(String)
2020-01-11 16:50:00.847 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:00.948 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"004683","name":"建信高端医疗股票","jzrq":"2020-01-09","dwjz":"1.1376","gsz":"1.1367","gszzl":"-0.08","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:00.950 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:00.951 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 建信高端医疗股票(004683)(String), 01-10 15:00(String), 1.1367(Double), -0.08(Double), 1.1416(Double), 0.35(Double), 0.26999999999999996(BigDecimal), 004683(String)
2020-01-11 16:50:00.985 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:00.985 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:00.986 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 004683(String), 建信高端医疗股票(004683)(String), 01-10 15:00(String), 1.1367(Double), -0.08(Double), 1.1416(Double), 0.35(Double), 0.26999999999999996(BigDecimal), 004683(String)
2020-01-11 16:50:00.987 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:01.134 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"005496","name":"创金合信科技成长股票C","jzrq":"2020-01-09","dwjz":"1.3844","gsz":"1.3862","gszzl":"0.13","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:01.135 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:01.135 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 创金合信科技成长股票C(005496)(String), 01-10 15:00(String), 1.3862(Double), 0.13(Double), 1.3899(Double), 0.4(Double), 0.53(BigDecimal), 005496(String)
2020-01-11 16:50:01.169 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:01.170 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:01.170 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 005496(String), 创金合信科技成长股票C(005496)(String), 01-10 15:00(String), 1.3862(Double), 0.13(Double), 1.3899(Double), 0.4(Double), 0.53(BigDecimal), 005496(String)
2020-01-11 16:50:01.171 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:01.260 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"005963","name":"宝盈人工智能股票C","jzrq":"2020-01-09","dwjz":"1.7709","gsz":"1.7787","gszzl":"0.44","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:01.261 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:01.261 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 宝盈人工智能股票C(005963)(String), 01-10 15:00(String), 1.7787(Double), 0.44(Double), 1.7847(Double), 0.78(Double), 1.22(BigDecimal), 005963(String)
2020-01-11 16:50:01.293 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:01.295 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:01.296 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 005963(String), 宝盈人工智能股票C(005963)(String), 01-10 15:00(String), 1.7787(Double), 0.44(Double), 1.7847(Double), 0.78(Double), 1.22(BigDecimal), 005963(String)
2020-01-11 16:50:01.297 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:01.415 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"070001","name":"嘉实成长收益混合A","jzrq":"2020-01-09","dwjz":"1.1775","gsz":"1.1785","gszzl":"0.09","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:01.415 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:01.416 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 嘉实成长收益混合A(070001)(String), 01-10 15:00(String), 1.1785(Double), 0.09(Double), 1.1915(Double), 1.19(Double), 1.28(BigDecimal), 070001(String)
2020-01-11 16:50:01.452 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:01.453 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:01.454 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 070001(String), 嘉实成长收益混合A(070001)(String), 01-10 15:00(String), 1.1785(Double), 0.09(Double), 1.1915(Double), 1.19(Double), 1.28(BigDecimal), 070001(String)
2020-01-11 16:50:01.455 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:01.550 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"070011","name":"嘉实策略混合","jzrq":"2020-01-09","dwjz":"1.2210","gsz":"1.2214","gszzl":"0.03","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:01.551 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:01.551 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 嘉实策略混合(070011)(String), 01-10 15:00(String), 1.2214(Double), 0.03(Double), 1.216(Double), -0.41(Double), -0.38(BigDecimal), 070011(String)
2020-01-11 16:50:01.585 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:01.586 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:01.587 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 070011(String), 嘉实策略混合(070011)(String), 01-10 15:00(String), 1.2214(Double), 0.03(Double), 1.216(Double), -0.41(Double), -0.38(BigDecimal), 070011(String)
2020-01-11 16:50:01.588 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:01.686 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"160222","name":"国泰国证食品饮料行业指数分级","jzrq":"2020-01-09","dwjz":"1.0976","gsz":"1.1108","gszzl":"1.21","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:01.687 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:01.688 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 国泰国证食品饮料行业指数分级(160222)(String), 01-10 15:00(String), 1.1108(Double), 1.21(Double), 1.1108(Double), 1.2(Double), 2.41(BigDecimal), 160222(String)
2020-01-11 16:50:01.719 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:01.721 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:01.721 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 160222(String), 国泰国证食品饮料行业指数分级(160222)(String), 01-10 15:00(String), 1.1108(Double), 1.21(Double), 1.1108(Double), 1.2(Double), 2.41(BigDecimal), 160222(String)
2020-01-11 16:50:01.722 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:01.822 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"163402","name":"兴全趋势投资混合(LOF)","jzrq":"2020-01-09","dwjz":"0.7560","gsz":"0.7552","gszzl":"-0.11","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:01.822 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:01.823 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 兴全趋势投资混合(LOF)(前端：163402  后端：163403)(String), 01-10 15:00(String), 0.7552(Double), -0.11(Double), 0.757(Double), 0.13(Double), 0.020000000000000004(BigDecimal), 163402(String)
2020-01-11 16:50:01.851 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:01.853 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:01.855 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 163402(String), 兴全趋势投资混合(LOF)(前端：163402  后端：163403)(String), 01-10 15:00(String), 0.7552(Double), -0.11(Double), 0.757(Double), 0.13(Double), 0.020000000000000004(BigDecimal), 163402(String)
2020-01-11 16:50:01.856 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 0
2020-01-11 16:50:01.952 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 爬取的最新基金数据为:jsonpgz({"fundcode":"519727","name":"交银成长30混合","jzrq":"2020-01-09","dwjz":"1.6650","gsz":"1.6801","gszzl":"0.91","gztime":"2020-01-10 15:00"});
2020-01-11 16:50:01.953 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==>  Preparing: update fund SET fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? where fund_code = ? 
2020-01-11 16:50:01.953 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : ==> Parameters: 交银成长30混合(前端：519727  后端：519728)(String), 01-10 15:00(String), 1.6801(Double), 0.91(Double), 1.67(Double), 0.3(Double), 1.21(BigDecimal), 519727(String)
2020-01-11 16:50:01.986 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.F.updateByPrimaryKeySelective    : <==    Updates: 1
2020-01-11 16:50:01.987 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==>  Preparing: update user_fund SET fund_code = ?, fund_name = ?, cur_time = ?, cur_net_value = ?, cur_gain = ?, last_net_value = ?, last_gain = ?, gain_total = ? WHERE ( fund_code = ? ) 
2020-01-11 16:50:01.987 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : ==> Parameters: 519727(String), 交银成长30混合(前端：519727  后端：519728)(String), 01-10 15:00(String), 1.6801(Double), 0.91(Double), 1.67(Double), 0.3(Double), 1.21(BigDecimal), 519727(String)
2020-01-11 16:50:02.045 DEBUG 6728 --- [pool-1-thread-1] c.k.g.d.U.updateByExampleSelective       : <==    Updates: 1
2020-01-11 16:50:02.045 DEBUG 6728 --- [pool-1-thread-1] c.k.fund.service.impl.TaskServiceImpl    : 遍历基金一轮花费时间:2040
2020-01-11 16:50:50.433  INFO 6728 --- [Thread-9] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2049a9c1: startup date [Sat Jan 11 16:48:51 CST 2020]; root of context hierarchy
2020-01-11 16:50:50.435  INFO 6728 --- [Thread-9] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2020-01-11 16:50:50.435  INFO 6728 --- [Thread-9] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2020-01-11 16:50:50.441  INFO 6728 --- [Thread-9] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
