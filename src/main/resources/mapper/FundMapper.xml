<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kenick.generate.dao.FundMapper">
  <resultMap id="BaseResultMap" type="com.kenick.generate.bean.Fund">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="cur_time" jdbcType="VARCHAR" property="curTime" />
    <result column="cur_net_value" jdbcType="DOUBLE" property="curNetValue" />
    <result column="cur_gain" jdbcType="DOUBLE" property="curGain" />
    <result column="last_net_value" jdbcType="DOUBLE" property="lastNetValue" />
    <result column="last_gain" jdbcType="DOUBLE" property="lastGain" />
    <result column="gain_total" jdbcType="DECIMAL" property="gainTotal" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name, cur_time, cur_net_value, cur_gain, last_net_value, last_gain, gain_total
  </sql>
  <select id="selectByExample" parameterType="com.kenick.generate.bean.FundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fund
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fund
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kenick.generate.bean.FundExample">
    delete from fund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kenick.generate.bean.Fund">
    insert into fund (id, code, name, 
      cur_time, cur_net_value, cur_gain, 
      last_net_value, last_gain, gain_total
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{curTime,jdbcType=VARCHAR}, #{curNetValue,jdbcType=DOUBLE}, #{curGain,jdbcType=DOUBLE}, 
      #{lastNetValue,jdbcType=DOUBLE}, #{lastGain,jdbcType=DOUBLE}, #{gainTotal,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kenick.generate.bean.Fund">
    insert into fund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="curTime != null">
        cur_time,
      </if>
      <if test="curNetValue != null">
        cur_net_value,
      </if>
      <if test="curGain != null">
        cur_gain,
      </if>
      <if test="lastNetValue != null">
        last_net_value,
      </if>
      <if test="lastGain != null">
        last_gain,
      </if>
      <if test="gainTotal != null">
        gain_total,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="curTime != null">
        #{curTime,jdbcType=VARCHAR},
      </if>
      <if test="curNetValue != null">
        #{curNetValue,jdbcType=DOUBLE},
      </if>
      <if test="curGain != null">
        #{curGain,jdbcType=DOUBLE},
      </if>
      <if test="lastNetValue != null">
        #{lastNetValue,jdbcType=DOUBLE},
      </if>
      <if test="lastGain != null">
        #{lastGain,jdbcType=DOUBLE},
      </if>
      <if test="gainTotal != null">
        #{gainTotal,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kenick.generate.bean.FundExample" resultType="java.lang.Long">
    select count(*) from fund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fund
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.curTime != null">
        cur_time = #{record.curTime,jdbcType=VARCHAR},
      </if>
      <if test="record.curNetValue != null">
        cur_net_value = #{record.curNetValue,jdbcType=DOUBLE},
      </if>
      <if test="record.curGain != null">
        cur_gain = #{record.curGain,jdbcType=DOUBLE},
      </if>
      <if test="record.lastNetValue != null">
        last_net_value = #{record.lastNetValue,jdbcType=DOUBLE},
      </if>
      <if test="record.lastGain != null">
        last_gain = #{record.lastGain,jdbcType=DOUBLE},
      </if>
      <if test="record.gainTotal != null">
        gain_total = #{record.gainTotal,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fund
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      cur_time = #{record.curTime,jdbcType=VARCHAR},
      cur_net_value = #{record.curNetValue,jdbcType=DOUBLE},
      cur_gain = #{record.curGain,jdbcType=DOUBLE},
      last_net_value = #{record.lastNetValue,jdbcType=DOUBLE},
      last_gain = #{record.lastGain,jdbcType=DOUBLE},
      gain_total = #{record.gainTotal,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kenick.generate.bean.Fund">
    update fund
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="curTime != null">
        cur_time = #{curTime,jdbcType=VARCHAR},
      </if>
      <if test="curNetValue != null">
        cur_net_value = #{curNetValue,jdbcType=DOUBLE},
      </if>
      <if test="curGain != null">
        cur_gain = #{curGain,jdbcType=DOUBLE},
      </if>
      <if test="lastNetValue != null">
        last_net_value = #{lastNetValue,jdbcType=DOUBLE},
      </if>
      <if test="lastGain != null">
        last_gain = #{lastGain,jdbcType=DOUBLE},
      </if>
      <if test="gainTotal != null">
        gain_total = #{gainTotal,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kenick.generate.bean.Fund">
    update fund
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      cur_time = #{curTime,jdbcType=VARCHAR},
      cur_net_value = #{curNetValue,jdbcType=DOUBLE},
      cur_gain = #{curGain,jdbcType=DOUBLE},
      last_net_value = #{lastNetValue,jdbcType=DOUBLE},
      last_gain = #{lastGain,jdbcType=DOUBLE},
      gain_total = #{gainTotal,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>